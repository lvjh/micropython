sudo: required
dist: trusty
language: c
compiler:
  - gcc

before_script:
# Extra CPython versions
#  - sudo add-apt-repository -y ppa:fkrull/deadsnakes
# Extra gcc versions
#  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo add-apt-repository -y ppa:terry.guo/gcc-arm-embedded
  - sudo dpkg --add-architecture i386
  - sudo apt-get update -qq || true
  - sudo apt-get install -y python3 gcc-multilib pkg-config libffi-dev libffi-dev:i386 qemu-system mingw32
  - sudo apt-get install -y --force-yes gcc-arm-none-eabi
  # For teensy build
  - sudo apt-get install realpath
  # For coverage testing
  - sudo pip install cpp-coveralls
  - gcc --version
  - arm-none-eabi-gcc --version
  - python3 --version

script:
  - make -C stmhal BOARD=ESPRUINO_PICO
  - make -C stmhal BOARD=CERB40
  - make -C stmhal BOARD=NETDUINO_PLUS_2
  - make -C stmhal BOARD=STM32F7DISC
  - make -C stmhal BOARD=STM32F429DISC
  - make -C stmhal -B DEBUG=1
  # The following (as of Feb 14, 2015 - fills flash)
  # make -C stmhal -B DEBUG=1 MICROPY_PY_WIZNET5K=1 MICROPY_PY_CC3K=1
  - make -C stmhal -B DEBUG=1 BOARD=STM32F4DISC
  - make -C stmhal -B DEBUG=1 BOARD=ESPRUINO_PICO
  - make -C stmhal -B DEBUG=1 BOARD=CERB40
  - make -C stmhal -B DEBUG=1 BOARD=NETDUINO_PLUS_2
  - make -C stmhal -B DEBUG=1 BOARD=STM32F7DISC
  - make -C stmhal -B DEBUG=1 BOARD=STM32F429DISC
  - make -C teensy -B DEBUG=1
  - make -C cc3200 -B DEBUG=1 BTARGET=application BTYPE=release
  - make -C cc3200 -B DEBUG=1 BTARGET=bootloader  BTYPE=release

after_failure:
  - (cd tests && for exp in *.exp; do testbase=$(basename $exp .exp); echo -e "\nFAILURE $testbase"; diff -u $testbase.exp $testbase.out; done)
  - (grep "FAIL" qemu-arm/build/console.out)
